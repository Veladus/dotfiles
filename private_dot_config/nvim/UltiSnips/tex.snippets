global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal

snippet beg "begin{} / end {}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

# Common environments
snippet enum "enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet enumroman "enumerate with roman numeral" bA
\begin{enumerate}[label=\roman*)]
	\item $0
\end{enumerate}
endsnippet

snippet enumalph "enumerate with alphabet" bA
\begin{enumerate}[label=\alph*)]
	\item $0
\end{enumerate}
endsnippet

snippet fig "Figure environment" b
\begin{figure}`!p snip.rv='[' if t[2] else ""`${2:htpb}`!p snip.rv=']' if t[2] else ""`
  \centering
  \includegraphics[width=${3:0.8}\linewidth]{${4:name.ext}}
  \caption{$0}%
  \label{fig:$5}
\end{figure}
endsnippet

# Math environments
snippet im "inline math" wA
\($1\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "display math" wA
\[
$0
.\]
endsnippet

# sub- and supscripts
context "math()"
snippet sq "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet Sub "_{ }" iA
_{$1}$2
endsnippet
context "math()"
snippet Sup "^{ }" iA
^{$1}$2
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


#Common latex things
context "math()"
snippet ll "\ell" iA
\ell
endsnippet

context "math()"
snippet : "colon" iA
\colon
endsnippet

context "math()"
snippet \colon= "coloneqq" iA
\coloneqq
endsnippet

context "math()"
snippet eps "good epsilon" wA
\varepsilon
endsnippet

#misc
snippet . "expand dot to newline" iA
.
$0
endsnippet
# workarounds for common abreviations
snippet wrt "with respect to" w
w.r.t.\\ $0
endsnippet
snippet wlog "without loss of generality" w
w.l.o.g.\\ $0
endsnippet
snippet st "such that" w
s.t.\\ $0
endsnippet
snippet ie "id est" w
i.e.\\ $0
endsnippet
